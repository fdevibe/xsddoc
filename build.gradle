import java.util.regex.Pattern

plugins {
    id 'java-library'
}

ant.importBuild('build.xml') { String oldTargetName ->
    switch (oldTargetName) {
        case 'javadoc': return 'ant_javadoc'
        case 'init': return 'ant_init'
        case 'jar': return 'ant_jar'
        case 'dist': return 'ant_dist'
        case 'increaseBuildNumber': return 'ant_increaseBuildNumber'
        default: return oldTargetName
    }
}

sourceSets {
    main {
        java {
            srcDirs = [ 'src' ]
            outputDir = file('classes')
        }
    }
    test {
        java {
            srcDirs = [ 'test' ]
        }
    }
}

test {
    useJUnitPlatform()
}

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    implementation 'org.apache.ant:ant:1.10.6'
    implementation 'org.apache.axis2:axis2-adb:1.7.9'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.4.2'
    // testImplementation 'org.mockito:mockito-core:3.0.0'
    testImplementation 'com.google.jimfs:jimfs:1.1'
}

// deploy.dependsOn = [ 'compileJava' ]

compileJava {
    options.compilerArgs << "-g"
}

task('increaseBuildNumber') {
    def numberFile = file("build.number")
    def pattern = Pattern.compile("build.number=(\\d+)")
    def numberText = numberFile.getText()
    def matcher = pattern.matcher(numberText)
    matcher.find()
    def buildNumber = Integer.parseInt(matcher.group(1))
    def newContent = '# Global build number. Please do not edit this file\n'
    newContent += '# ' + new Date().toString() + '\n'
    newContent += 'build.number=' + ++buildNumber + '\n'
    numberFile.write(newContent)
}

def String buildNumber

task getBuildNumber {
    Properties properties = new Properties()
    InputStream inputStream = new FileInputStream('build.number')
    properties.load(inputStream)
    inputStream.close()
    buildNumber = properties.getProperty('build.number')
}

jar {
    dependsOn getBuildNumber

    manifest {
        attributes([
                'Manifest-Version': '1.0',
                'Created-By': 'xframe - Kurt Riede',
                'Main-Class': 'net.sf.xframe.xsddoc.Main',
                'Specification-Title': 'xframe - xsddoc',
                'Specification-Vendor': 'xframe - Kurt Riede',
                'Implementation-Version': buildNumber + ' ' + new Date().format('YYYY-MM-DD'),
                'Implementation-Vendor': 'xframe.sf.net',
                'Implementation-Vendor-Id': 'xframe.sf.net',
                'Class-Path': 'xalan-2.7.2.jar xerces.jar xercesImpl.jar xml-apis.jar'
        ])
    }
}

javadoc {
    source = sourceSets.main.java
    destinationDir = file('doc/api')
    failOnError = false
}
